apiVersion: apps/v1
kind: Deployment
metadata:
  name: testapi-deployment
  labels:
    app: testapi
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testapi
      version: v2
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "3000"
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-status: 'update'
        vault.hashicorp.com/role: 'test'
        vault.hashicorp.com/agent-init-first: 'true'
        vault.hashicorp.com/agent-inject-secret-config: 'test/data/mysql' 
        vault.hashicorp.com/agent-inject-template-config: |
          {{- with secret "test/data/mysql" -}}
          export MYSQL_HOST={{ .Data.data.host }}
          export DBNAME={{ .Data.data.db }}
          export DBPASS={{ .Data.data.password }}
          export UNAME={{ .Data.data.username }}
          {{- end -}} 

      labels:
        app: testapi
        version: v2
    spec:
      serviceAccountName: test
      containers:
      - name: testapi
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m" 
        image: tmarkunin/testapi:2.1
        command: [/bin/bash, -c, "source /vault/secrets/config && npm start"]
        args:
          - "monitor=true"
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /users
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
